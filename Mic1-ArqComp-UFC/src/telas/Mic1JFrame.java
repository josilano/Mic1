/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import mic1.arqcomp.ufc.Mic1ArqCompUFC;

/**
 *
 * @author LaNo
 */
public class Mic1JFrame extends javax.swing.JFrame {

    /**
     * Creates new form Mic1JFrame
     */
    Mic1ArqCompUFC mic1;
    int qtdCiclo;
    String memp;
    int aulaArC;
    
    public Mic1JFrame() {
        initComponents();
        qtdCiclo = 1;
        memp = "0000000100000001000000110000000100000100000001100000000000000000";
        aulaArC = 0;
        mic1 = new Mic1ArqCompUFC(aulaArC);
        this.carregarMemoriaPrincipal(memp);
        this.flagWRInicial();
        this.settxtMemPTela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbMdr = new javax.swing.JLabel();
        lbBitMdr = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lbMar = new javax.swing.JLabel();
        lbBitMar = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lbMbr = new javax.swing.JLabel();
        lbBitMbr = new javax.swing.JLabel();
        painelLv = new javax.swing.JPanel();
        lbLv = new javax.swing.JLabel();
        lbBitLv = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lbSp = new javax.swing.JLabel();
        lbBitSp = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lbPc = new javax.swing.JLabel();
        lbBitPc = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        lbTos = new javax.swing.JLabel();
        lbBitTos = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        lbOpc = new javax.swing.JLabel();
        lbBitOpc = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        lbH = new javax.swing.JLabel();
        lbBitH = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        lbCpp = new javax.swing.JLabel();
        lbBitCpp = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lbContadorCicloClock = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnPorCiclo = new javax.swing.JButton();
        lbRmdr = new javax.swing.JLabel();
        lbRpc = new javax.swing.JLabel();
        lbRmbr = new javax.swing.JLabel();
        lbWmar = new javax.swing.JLabel();
        lbWmdr = new javax.swing.JLabel();
        lbWpc = new javax.swing.JLabel();
        lbRsp = new javax.swing.JLabel();
        lbWsp = new javax.swing.JLabel();
        lbRlv = new javax.swing.JLabel();
        lbWlv = new javax.swing.JLabel();
        lbRcpp = new javax.swing.JLabel();
        lbWcpp = new javax.swing.JLabel();
        lbRtos = new javax.swing.JLabel();
        lbWtos = new javax.swing.JLabel();
        lbRopc = new javax.swing.JLabel();
        lbWopc = new javax.swing.JLabel();
        lbWh = new javax.swing.JLabel();
        btnConfigMic1 = new javax.swing.JButton();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaMemPTela = new javax.swing.JTextArea();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setForeground(new java.awt.Color(0, 0, 255));

        jPanel2.setBackground(new java.awt.Color(153, 51, 255));

        lbMdr.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbMdr.setText("MDR");

        lbBitMdr.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitMdr))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbMdr)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lbMdr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitMdr)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Viner Hand ITC", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mic1 - ArqComp - UFC");

        jPanel3.setBackground(new java.awt.Color(153, 51, 255));

        lbMar.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbMar.setText("MAR");

        lbBitMar.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitMar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbMar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lbMar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitMar)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 51, 255));

        lbMbr.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbMbr.setText("MBR");

        lbBitMbr.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitMbr))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbMbr)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lbMbr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitMbr)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        painelLv.setBackground(new java.awt.Color(153, 51, 255));

        lbLv.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbLv.setText("LV");

        lbBitLv.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout painelLvLayout = new javax.swing.GroupLayout(painelLv);
        painelLv.setLayout(painelLvLayout);
        painelLvLayout.setHorizontalGroup(
            painelLvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLvLayout.createSequentialGroup()
                .addGroup(painelLvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelLvLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitLv))
                    .addGroup(painelLvLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbLv)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelLvLayout.setVerticalGroup(
            painelLvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLvLayout.createSequentialGroup()
                .addComponent(lbLv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitLv)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 51, 255));

        lbSp.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbSp.setText("SP");

        lbBitSp.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitSp))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbSp)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(lbSp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitSp)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(153, 51, 255));

        lbPc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbPc.setText("PC");

        lbBitPc.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitPc))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbPc)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(lbPc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitPc)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(153, 51, 255));

        lbTos.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbTos.setText("TOS");

        lbBitTos.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitTos))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbTos)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(lbTos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitTos)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(153, 51, 255));

        lbOpc.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbOpc.setText("OPC");

        lbBitOpc.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitOpc))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbOpc)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(lbOpc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitOpc)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(153, 51, 255));

        lbH.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbH.setText("H");

        lbBitH.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitH))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbH)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(lbH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitH)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(153, 51, 255));

        lbCpp.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        lbCpp.setText("CPP");

        lbBitCpp.setText("00000000000000000000000000000000");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBitCpp))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lbCpp)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(lbCpp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbBitCpp)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jLabel22.setFont(new java.awt.Font("Vani", 0, 12)); // NOI18N
        jLabel22.setText("CICLO DE CLOCK");

        lbContadorCicloClock.setFont(new java.awt.Font("OCR A Extended", 1, 12)); // NOI18N
        lbContadorCicloClock.setText("0");

        btnIniciar.setBackground(new java.awt.Color(255, 51, 51));
        btnIniciar.setFont(new java.awt.Font("Showcard Gothic", 1, 14)); // NOI18N
        btnIniciar.setForeground(new java.awt.Color(51, 0, 51));
        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("LaNo DuPi");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 2, 14)); // NOI18N
        jLabel4.setText("Memória Principal");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jLabel5.setText("INSTRUÇÕES");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jLabel7.setText("Clique no botão Iniciar para executar todos os ciclos.");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jLabel8.setText("Clique no botão Por Ciclo para executar cada ciclo a medida que for clicando.");

        btnPorCiclo.setBackground(new java.awt.Color(153, 204, 0));
        btnPorCiclo.setFont(new java.awt.Font("Castellar", 0, 12)); // NOI18N
        btnPorCiclo.setForeground(new java.awt.Color(255, 102, 51));
        btnPorCiclo.setText("Por Ciclo");
        btnPorCiclo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPorCicloActionPerformed(evt);
            }
        });

        lbRmdr.setBackground(new java.awt.Color(255, 255, 0));
        lbRmdr.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRmdr.setForeground(new java.awt.Color(255, 255, 0));
        lbRmdr.setText("READ");

        lbRpc.setBackground(new java.awt.Color(255, 255, 51));
        lbRpc.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRpc.setForeground(new java.awt.Color(255, 255, 0));
        lbRpc.setText("READ");

        lbRmbr.setBackground(new java.awt.Color(255, 255, 0));
        lbRmbr.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRmbr.setForeground(new java.awt.Color(255, 255, 0));
        lbRmbr.setText("READ");

        lbWmar.setBackground(new java.awt.Color(255, 255, 0));
        lbWmar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWmar.setForeground(new java.awt.Color(255, 255, 0));
        lbWmar.setText("WRITE");

        lbWmdr.setBackground(new java.awt.Color(255, 255, 0));
        lbWmdr.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWmdr.setForeground(new java.awt.Color(255, 255, 0));
        lbWmdr.setText("WRITE");

        lbWpc.setBackground(new java.awt.Color(255, 255, 0));
        lbWpc.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWpc.setForeground(new java.awt.Color(255, 255, 0));
        lbWpc.setText("WRITE");

        lbRsp.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRsp.setForeground(new java.awt.Color(255, 255, 0));
        lbRsp.setText("READ");

        lbWsp.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWsp.setForeground(new java.awt.Color(255, 255, 0));
        lbWsp.setText("WRITE");

        lbRlv.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRlv.setForeground(new java.awt.Color(255, 255, 0));
        lbRlv.setText("READ");

        lbWlv.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWlv.setForeground(new java.awt.Color(255, 255, 0));
        lbWlv.setText("WRITE");

        lbRcpp.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRcpp.setForeground(new java.awt.Color(255, 255, 0));
        lbRcpp.setText("READ");

        lbWcpp.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWcpp.setForeground(new java.awt.Color(255, 255, 0));
        lbWcpp.setText("WRITE");

        lbRtos.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRtos.setForeground(new java.awt.Color(255, 255, 0));
        lbRtos.setText("READ");

        lbWtos.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWtos.setForeground(new java.awt.Color(255, 255, 0));
        lbWtos.setText("WRITE");

        lbRopc.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbRopc.setForeground(new java.awt.Color(255, 255, 0));
        lbRopc.setText("READ");

        lbWopc.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWopc.setForeground(new java.awt.Color(255, 255, 0));
        lbWopc.setText("WRITE");

        lbWh.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbWh.setForeground(new java.awt.Color(255, 255, 0));
        lbWh.setText("WRITE");

        btnConfigMic1.setFont(new java.awt.Font("MS PMincho", 1, 14)); // NOI18N
        btnConfigMic1.setForeground(new java.awt.Color(102, 0, 102));
        btnConfigMic1.setText("Configuração");
        btnConfigMic1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigMic1ActionPerformed(evt);
            }
        });

        txtaMemPTela.setEditable(false);
        txtaMemPTela.setColumns(14);
        txtaMemPTela.setRows(5);
        txtaMemPTela.setText("[0] 00000000 000");
        jScrollPane1.setViewportView(txtaMemPTela);

        scrollPane1.add(jScrollPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbWmar)
                            .addComponent(lbWmdr)
                            .addComponent(lbWpc))
                        .addComponent(lbWsp)
                        .addComponent(lbWlv)
                        .addComponent(lbWcpp)
                        .addComponent(lbWtos)
                        .addComponent(lbWopc))
                    .addComponent(lbWh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(painelLv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbRpc)
                                                    .addComponent(lbRmbr)
                                                    .addComponent(lbRlv))
                                                .addGap(150, 150, 150)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(btnIniciar)
                                                        .addGap(81, 81, 81)
                                                        .addComponent(btnPorCiclo))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel3)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                                                        .addComponent(btnConfigMic1))
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                            .addComponent(jLabel22)
                                                            .addGap(18, 18, 18)
                                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(lbContadorCicloClock, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbRmdr)
                                                    .addComponent(lbRsp)
                                                    .addComponent(lbRcpp))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(37, 37, 37))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbRtos)
                                            .addComponent(lbRopc))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addContainerGap())))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lbWmar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnConfigMic1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(lbRmdr))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lbWmdr)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel22)
                                            .addComponent(lbContadorCicloClock)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(lbRpc))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(lbWpc)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(lbRmbr))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnIniciar)
                                .addComponent(btnPorCiclo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbRsp)
                            .addComponent(lbWsp))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(painelLv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGap(12, 12, 12)
                                            .addComponent(lbRlv)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(lbWlv)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(lbRcpp))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(lbWcpp)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(9, 9, 9)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbRtos)
                                                    .addComponent(lbWtos))))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(lbWopc))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbRopc)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbWh)
                                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void carregarMemoriaPrincipal(String memram){
        int TAMRAM = memram.length();
        int contador = 0;
        mic1.ram = new int[TAMRAM];
        for (String i: memram.split("")){
            mic1.ram[contador] = Integer.parseInt(i);
            contador++;
        }
    }
    
    private void settxtMemPTela(){
        String txtmem = "";
        int contador = 0;
        /*for (int i = 0; i < mic1.ram.length; i+=8){
            int[] arri = new int[8];
            for (int j=0;j< this.memp.substring(i, i+8).length(); j++){
                arri[j] = Integer.parseInt(this.memp.substring(i, i+8).split("")[j]);
            }
            
            txtmem += "["+contador+"]"+" "+this.memp.substring(i, i+8)+" | "+mic1.binToDec(arri)+"\n";
            contador++;
        }*/
        int contpalavra = 0;
        for (int i=0; i<mic1.ram.length;i+=8){
            int[] arri = new int[8];
            String binario = "";
            int[] palavra32bits = new int[32];
            for (int j = 0; j <= 7; j++){
                arri[j] = mic1.ram[i+j];
                binario += String.valueOf(mic1.ram[i+j]);
            }
            txtmem += "["+contador+"]"+" "+binario+" | "+mic1.binToDec(arri);
            if (contador % 4 == 0){
                for (int j = 0; j < palavra32bits.length; j++){
                    palavra32bits[j] = mic1.ram[contpalavra];
                    //System.out.println(contpalavra);
                    contpalavra++;
                }
                txtmem += " | "+mic1.binToDec(palavra32bits);
            }
            txtmem += "\n";
            //txtmem += "["+contador+"]"+" "+binario+" | "+mic1.binToDec(arri)+"\n";
            contador++;
        }
        this.txtaMemPTela.setText(txtmem);
    }
    
    private void flagWRInicial(){
        this.lbWmar.setText("");
        this.lbRmdr.setText("");
        this.lbWmdr.setText("");
        this.lbRpc.setText("");
        this.lbWpc.setText("");
        this.lbRmbr.setText("");
        this.lbRsp.setText("");
        this.lbWsp.setText("");
        this.lbRlv.setText("");
        this.lbWlv.setText("");
        this.lbRcpp.setText("");
        this.lbWcpp.setText("");
        this.lbRtos.setText("");
        this.lbWtos.setText("");
        this.lbRopc.setText("");
        this.lbWopc.setText("");
        this.lbWh.setText("");
    }
    
    private void setRegistroInicial(){
        this.lbBitMar.setText("0000000000000000000000000000000000");
        this.lbBitMdr.setText("0000000000000000000000000000000000");
        this.lbBitPc.setText("0000000000000000000000000000000000");
        this.lbBitMbr.setText("0000000000000000000000000000000000");
        this.lbBitSp.setText("0000000000000000000000000000000000");
        this.lbBitLv.setText("0000000000000000000000000000000000");
        this.lbBitCpp.setText("0000000000000000000000000000000000");
        this.lbBitTos.setText("0000000000000000000000000000000000");
        this.lbBitOpc.setText("0000000000000000000000000000000000");
        this.lbBitH.setText("0000000000000000000000000000000000");
    }
    
    private void restartMic1(int numaula, String memoriaP){
        mic1 = new Mic1ArqCompUFC(numaula);
        this.carregarMemoriaPrincipal(memoriaP);
        this.flagWRInicial();
        this.setRegistroInicial();
        this.lbContadorCicloClock.setText("0");
        qtdCiclo = 1;
        this.settxtMemPTela();
    }
    
    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        try {
            Mic1ArqCompUFC mic = new Mic1ArqCompUFC(this.aulaArC);
            int ciclos = mic.getArmazDeControle().length;
            String memram = this.memp;//this.txtMemRam.getText();
            int TAMRAM = memram.length();
            int contador = 0;
            mic.ram = new int[TAMRAM];
            //0000 0001; 0000 0001; 0000 0011; 0000 0001; 0000 0100; 0000 0110;
            //String memram = "000000010000000100000011000000010000010000000110";
            for (String i: memram.split("")){
                mic.ram[contador] = Integer.parseInt(i);
                contador++;
            }
            for (int i = 1; i <= ciclos; i++){
                mic.cicloDeClock();
                mic.printRegistros();
                int[] mar = mic.getMar();
                String txt = "";
                for (int j: mar){
                    txt += String.valueOf(j);
                }
                this.lbBitMar.setText(txt);
                txt = "";
                int[] mdr = mic.getMdr();
                for (int j: mdr){
                    txt += String.valueOf(j);
                }
                this.lbBitMdr.setText(txt);
                txt = "";
                int[] pc = mic.getPc();
                for (int j: pc){
                    txt += String.valueOf(j);
                }
                this.lbBitPc.setText(txt);
                txt = "";
                int[] mbr = mic.getMbr();
                for (int j: mbr){
                    txt += String.valueOf(j);
                }
                this.lbBitMbr.setText(txt);
                txt = "";
                int[] sp = mic.getSp();
                for (int j: sp){
                    txt += String.valueOf(j);
                }
                this.lbBitSp.setText(txt);
                txt = "";
                int[] lv = mic.getLv();
                for (int j: lv){
                    txt += String.valueOf(j);
                }
                this.lbBitLv.setText(txt);
                txt = "";
                int[] cpp = mic.getCpp();
                for (int j: cpp){
                    txt += String.valueOf(j);
                }
                this.lbBitCpp.setText(txt);
                txt = "";
                int[] tos = mic.getTos();
                for (int j: tos){
                    txt += String.valueOf(j);
                }
                this.lbBitTos.setText(txt);
                txt = "";
                int[] opc = mic.getOpc();
                for (int j: opc){
                    txt += String.valueOf(j);
                }
                this.lbBitOpc.setText(txt);
                txt = "";
                int[] h = mic.getH();
                for (int j: h){
                    txt += String.valueOf(j);
                }
                this.lbBitH.setText(txt);
                this.lbContadorCicloClock.setText(String.valueOf(i));
            }
            this.settxtMemPTela();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex, "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Mic1JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnPorCicloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPorCicloActionPerformed
        try {
            mic1.cicloDeClock();
            //mic1.printRegistros();
            int[] mar = mic1.getMar();
            String txt = "";
            for (int j: mar){
                txt += String.valueOf(j);
            }
            this.lbBitMar.setText(txt);
            if (mar[0] == 1) this.lbWmar.setText("WRITE");
            else this.lbWmar.setText("");
            txt = "";
            int[] mdr = mic1.getMdr();
            for (int j: mdr){
                txt += String.valueOf(j);
            }
            this.lbBitMdr.setText(txt);
            if (mdr[0] == 1) this.lbWmdr.setText("WRITE");
            else this.lbWmdr.setText("");
            if (mdr[1] == 1) this.lbRmdr.setText("READ");
            else this.lbRmdr.setText("");
            txt = "";
            int[] pc = mic1.getPc();
            for (int j: pc){
                txt += String.valueOf(j);
            }
            this.lbBitPc.setText(txt);
            if (pc[0] == 1) this.lbWpc.setText("WRITE");
            else this.lbWpc.setText("");
            if (pc[1] == 1) this.lbRpc.setText("READ");
            else this.lbRpc.setText("");
            txt = "";
            int[] mbr = mic1.getMbr();
            for (int j: mbr){
                txt += String.valueOf(j);
            }
            this.lbBitMbr.setText(txt);
            if (mbr[0] == 1) this.lbRmbr.setText("READ");
            else this.lbRmbr.setText("");
            if (mbr[1] == 1) this.lbRmbr.setText("READ");
            else this.lbRmbr.setText("");
            txt = "";
            int[] sp = mic1.getSp();
            for (int j: sp){
                txt += String.valueOf(j);
            }
            this.lbBitSp.setText(txt);
            if (sp[0] == 1) this.lbWsp.setText("WRITE");
            else this.lbWsp.setText("");
            if (sp[1] == 1) this.lbRsp.setText("READ");
            else this.lbRsp.setText("");
            txt = "";
            int[] lv = mic1.getLv();
            for (int j: lv){
                txt += String.valueOf(j);
            }
            this.lbBitLv.setText(txt);
            if (lv[0] == 1) this.lbWlv.setText("WRITE");
            else this.lbWlv.setText("");
            if (lv[1] == 1) this.lbRlv.setText("READ");
            else this.lbRlv.setText("");
            txt = "";
            int[] cpp = mic1.getCpp();
            for (int j: cpp){
                txt += String.valueOf(j);
            }
            this.lbBitCpp.setText(txt);
            if (cpp[0] == 1) this.lbWcpp.setText("WRITE");
            else this.lbWcpp.setText("");
            if (cpp[1] == 1) this.lbRcpp.setText("READ");
            else this.lbRcpp.setText("");
            txt = "";
            int[] tos = mic1.getTos();
            for (int j: tos){
                txt += String.valueOf(j);
            }
            this.lbBitTos.setText(txt);
            if (tos[0] == 1) this.lbWtos.setText("WRITE");
            else this.lbWtos.setText("");
            if (tos[1] == 1) this.lbRtos.setText("READ");
            else this.lbRtos.setText("");
            txt = "";
            int[] opc = mic1.getOpc();
            for (int j: opc){
                txt += String.valueOf(j);
            }
            this.lbBitOpc.setText(txt);
            if (opc[0] == 1) this.lbWopc.setText("WRITE");
            else this.lbWopc.setText("");
            if (opc[1] == 1) this.lbRopc.setText("READ");
            else this.lbRopc.setText("");
            txt = "";
            int[] h = mic1.getH();
            for (int j: h){
                txt += String.valueOf(j);
            }
            this.lbBitH.setText(txt);
            if (h[0] == 1) this.lbWh.setText("WRITE");
            else this.lbWh.setText("");
            this.lbContadorCicloClock.setText(String.valueOf(qtdCiclo));
            qtdCiclo++;
            this.settxtMemPTela();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Erro, provavel estouro de memória", JOptionPane.ERROR_MESSAGE);    
            Logger.getLogger(Mic1JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPorCicloActionPerformed

    private void btnConfigMic1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigMic1ActionPerformed
        ConfigAC cac = new ConfigAC(this, rootPaneCheckingEnabled);
        cac.setLocationRelativeTo(this);
        cac.setVisible(true);
        if (cac.altera) this.restartMic1(this.aulaArC=cac.ac, this.memp=cac.memoria);
    }//GEN-LAST:event_btnConfigMic1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mic1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mic1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mic1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mic1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mic1JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfigMic1;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnPorCiclo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBitCpp;
    private javax.swing.JLabel lbBitH;
    private javax.swing.JLabel lbBitLv;
    private javax.swing.JLabel lbBitMar;
    private javax.swing.JLabel lbBitMbr;
    private javax.swing.JLabel lbBitMdr;
    private javax.swing.JLabel lbBitOpc;
    private javax.swing.JLabel lbBitPc;
    private javax.swing.JLabel lbBitSp;
    private javax.swing.JLabel lbBitTos;
    private javax.swing.JLabel lbContadorCicloClock;
    private javax.swing.JLabel lbCpp;
    private javax.swing.JLabel lbH;
    private javax.swing.JLabel lbLv;
    private javax.swing.JLabel lbMar;
    private javax.swing.JLabel lbMbr;
    private javax.swing.JLabel lbMdr;
    private javax.swing.JLabel lbOpc;
    private javax.swing.JLabel lbPc;
    private javax.swing.JLabel lbRcpp;
    private javax.swing.JLabel lbRlv;
    private javax.swing.JLabel lbRmbr;
    private javax.swing.JLabel lbRmdr;
    private javax.swing.JLabel lbRopc;
    private javax.swing.JLabel lbRpc;
    private javax.swing.JLabel lbRsp;
    private javax.swing.JLabel lbRtos;
    private javax.swing.JLabel lbSp;
    private javax.swing.JLabel lbTos;
    private javax.swing.JLabel lbWcpp;
    private javax.swing.JLabel lbWh;
    private javax.swing.JLabel lbWlv;
    private javax.swing.JLabel lbWmar;
    private javax.swing.JLabel lbWmdr;
    private javax.swing.JLabel lbWopc;
    private javax.swing.JLabel lbWpc;
    private javax.swing.JLabel lbWsp;
    private javax.swing.JLabel lbWtos;
    private javax.swing.JPanel painelLv;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTextArea txtaMemPTela;
    // End of variables declaration//GEN-END:variables
}
